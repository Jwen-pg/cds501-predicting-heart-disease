library(e1071)
library(ggplot2)
library(knitr)
library(klaR)
library(randomForest)
library(rattle)
library(RColorBrewer)
library(rpart)
library(rpart.plot)
library(rsample)
library(varhandle)
# sets knitr working directory to the directory of this file
opts_knit$set(root.dir = dirname(rstudioapi::getActiveDocumentContext()$path))
# sets wroking directory to file's directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# reads dataset
data <- read.csv2("../data/cardio.csv")
# drops 'id' attribute from the dataset
data <- subset(data, select = -c(id))
# recoding categorical or ordered data into readable format
data$cardio <- as.factor(ifelse(data$cardio == 0, "Negative", "Positive"))
data$active <- as.factor(ifelse(data$active == 0, "Inactive", "Active"))
data$alco <- as.factor(ifelse(data$alco == 0, "Non-alcoholic", "Alcoholic"))
data$smoke <- as.factor(ifelse(data$smoke == 0, "Non-smoker", "Smoker"))
data$gluc <- as.ordered(ifelse(data$gluc == 1, "Normal", ifelse(data$gluc == 2, "Above Normal", "Well Above Normal")))
data$cholesterol <- as.ordered(ifelse(data$cholesterol == 1, "Normal", ifelse(data$cholesterol == 2, "Above Normal", "Well Above Normal")))
data$gender <- as.factor(ifelse(data$gender == 1, "Woman", "Man"))
# converts 'weight' from character to numeric
data$weight <- unfactor(data$weight)
# converts unit of 'age' from days to years
data$age <- round(data$age / 365, digits = 0)
# creates 'BMI' column from corresponding 'height' and 'weight'
data$BMI <- (data$weight / ((data$height * 0.01) ^ 2))
# changes column names to readable format
colnames(data) <- c("Age", "Gender", "Height", "Weight", "Systole", "Diastole", "Cholesterol", "Glucose", "Smoking", "Alcohol", "Active", "Target", "BMI")
# change blood pressure into three levels: Low, Normal, High
data$BloodPressure = ifelse((data$Systole >= 140 | data$Diastole >= 90), "High", ifelse((data$Systole <= 90 | data$Diastole <= 60), "Low", "Normal"))
data$BloodPressure <- as.factor(data$BloodPressure)
head(data)
# removes observation for which 'Systole' or 'Diastole' has negative values
data <- subset(data, Systole > 0 & Diastole > 0)
# removes 'ap_hi' and 'ap_lo' outliers
iqr_multiplier = 3
ap_hi_upper_threshold <- quantile(data$Systole, .75) + iqr_multiplier * (quantile(data$Systole, .75) - quantile(data$Systole, .25))
ap_hi_lower_threshold <- quantile(data$Systole, .25) - iqr_multiplier * (quantile(data$Systole, .75) - quantile(data$Systole, .25))
ap_lo_upper_threshold <- quantile(data$Diastole, .75) + iqr_multiplier * (quantile(data$Diastole, .75) - quantile(data$Diastole, .25))
ap_lo_lower_threshold <- quantile(data$Diastole, .25) - iqr_multiplier * (quantile(data$Diastole, .75) - quantile(data$Diastole, .25))
data <- subset(data, Systole < ap_hi_upper_threshold & Systole > ap_hi_lower_threshold & Diastole < ap_lo_upper_threshold & Diastole > ap_lo_lower_threshold)
# removes 'height' outliers'
height_iqr_multiplier = 1.5
height_upper_threshold <- quantile(data$Height, .75) + height_iqr_multiplier * (quantile(data$Height, .75) - quantile(data$Height, .25))
height_lower_threshold <- quantile(data$Height, .25) - height_iqr_multiplier * (quantile(data$Height, .75) - quantile(data$Height, .25))
data <- subset(data, Height > height_lower_threshold & Height < height_upper_threshold)
# removes 'weight' outliers'
weight_iqr_multiplier = 1.5
weight_upper_threshold <- quantile(data$Weight, .75) + weight_iqr_multiplier * (quantile(data$Weight, .75) - quantile(data$Weight, .25))
weight_lower_threshold <- quantile(data$Weight, .25) - weight_iqr_multiplier * (quantile(data$Weight, .75) - quantile(data$Weight, .25))
data <- subset(data, Weight > weight_lower_threshold & Weight < weight_upper_threshold)
data$Age = scale(data$Age)
data$Height = scale(data$Height)
data$Weight = scale(data$Weight)
data$BMI = scale(data$BMI)
data$Systole = scale(data$Systole)
data$Diastole = scale(data$Diastole)
# summerizes newly encoded dataset
summary(data)
# train/test split
set.seed(1994)
# splits into train and test data
split <- initial_split(data, prop = 0.80, strata = "Target")
training_set <- training(split)
testing_set <- testing(split)
# checks class distribution after the split
cat("Training Set:")
prop.table(table(training_set$Target)) * 100
cat("Testing Set:")
prop.table(table(testing_set$Target)) * 100
set.seed(400)
ctrl <- trainControl(method="repeatedcv", repeats = 3)
knn_fit <- train(Target ~ ., data = training_set, method = "knn", trControl = ctrl, preProcess = c("center","scale"), tuneLength = 20)
#Output of kNN fit
knnFit
# explores types of the attributes
unlist(sapply(data, class))
# summerizes dataset
summary(data)
# sets wroking directory to file's directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# reads dataset
data <- read.csv2("../data/cardio.csv")
# drops 'id' attribute from the dataset
data <- subset(data, select = -c(id))
# recoding categorical or ordered data into readable format
data$cardio <- as.factor(ifelse(data$cardio == 0, "Negative", "Positive"))
data$active <- as.factor(ifelse(data$active == 0, "Inactive", "Active"))
data$alco <- as.factor(ifelse(data$alco == 0, "Non-alcoholic", "Alcoholic"))
data$smoke <- as.factor(ifelse(data$smoke == 0, "Non-smoker", "Smoker"))
data$gluc <- as.ordered(ifelse(data$gluc == 1, "Normal", ifelse(data$gluc == 2, "Above Normal", "Well Above Normal")))
data$cholesterol <- as.ordered(ifelse(data$cholesterol == 1, "Normal", ifelse(data$cholesterol == 2, "Above Normal", "Well Above Normal")))
data$gender <- as.factor(ifelse(data$gender == 1, "Woman", "Man"))
# converts 'weight' from character to numeric
data$weight <- unfactor(data$weight)
# converts unit of 'age' from days to years
data$age <- round(data$age / 365, digits = 0)
# creates 'BMI' column from corresponding 'height' and 'weight'
data$BMI <- (data$weight / ((data$height * 0.01) ^ 2))
# changes column names to readable format
colnames(data) <- c("Age", "Gender", "Height", "Weight", "Systole", "Diastole", "Cholesterol", "Glucose", "Smoking", "Alcohol", "Active", "Target", "BMI")
# change blood pressure into three levels: Low, Normal, High
data$BloodPressure = ifelse((data$Systole >= 140 | data$Diastole >= 90), "High", ifelse((data$Systole <= 90 | data$Diastole <= 60), "Low", "Normal"))
data$BloodPressure <- as.factor(data$BloodPressure)
head(data)
# explores types of the attributes
unlist(sapply(data, class))
# summerizes dataset
summary(data)
ggplot(data) + geom_density(aes(x = Systole, fill = Target), alpha=0.8) + ggtitle("Systole Density Plot") + xlab("Systole") + ylab("Density") + theme_bw() + scale_fill_manual(values=c("#15158a", "#eb4034"))
# saves plot
png(file="../figures/systole_dist.png", width=600, height=350)
ggplot(data) + geom_density(aes(x = Systole, fill = Target), alpha=0.8) + ggtitle("Systole Density Plot") + xlab("Systole") + ylab("Density") + theme_bw() + scale_fill_manual(values=c("#15158a", "#eb4034"))
dev.off()
ggplot(data) + geom_density(aes(x = Diastole, fill = Target), alpha=0.8) + ggtitle("Diastole Density Plot") + xlab("Diastole") + ylab("Density") + theme_bw() + scale_fill_manual(values=c("#15158a", "#eb4034"))
# saves plot
png(file="../figures/diastole_dist.png", width=600, height=350)
ggplot(data) + geom_density(aes(x = Diastole, fill = Target), alpha=0.8) + ggtitle("Diastole Density Plot") + xlab("Diastole") + ylab("Density") + theme_bw() + scale_fill_manual(values=c("#15158a", "#eb4034"))
dev.off()
ggplot(data) + geom_density(aes(x = Diastole, fill = Target), alpha=0.8) + scale_x_log10() + ggtitle("Diastole Density Plot") + xlab("Diastole") + ylab("Density") + theme_bw() + scale_fill_manual(values=c("#15158a", "#eb4034"))
# saves plot
png(file="../figures/diastole_dist.png", width=600, height=350)
ggplot(data) + geom_density(aes(x = Diastole, fill = Target), alpha=0.8) + ggtitle("Diastole Density Plot") + xlab("Diastole") + ylab("Density") + theme_bw() + scale_fill_manual(values=c("#15158a", "#eb4034"))
dev.off()
ggplot(data) + geom_density(aes(x = Diastole, fill = Target), alpha=0.8) + scale_x_log10(c(10, 100, 1000)) + ggtitle("Diastole Density Plot") + xlab("Diastole") + ylab("Density") + theme_bw() + scale_fill_manual(values=c("#15158a", "#eb4034"))
# saves plot
png(file="../figures/diastole_dist.png", width=600, height=350)
ggplot(data) + geom_density(aes(x = Diastole, fill = Target), alpha=0.8) + ggtitle("Diastole Density Plot") + xlab("Diastole") + ylab("Density") + theme_bw() + scale_fill_manual(values=c("#15158a", "#eb4034"))
dev.off()
ggplot(data) + geom_density(aes(x = Diastole, fill = Target), alpha=0.8) + scale_x_log10(breaks = c(10, 100, 1000)) + ggtitle("Diastole Density Plot") + xlab("Diastole") + ylab("Density") + theme_bw() + scale_fill_manual(values=c("#15158a", "#eb4034"))
# saves plot
png(file="../figures/diastole_dist.png", width=600, height=350)
ggplot(data) + geom_density(aes(x = Diastole, fill = Target), alpha=0.8) + ggtitle("Diastole Density Plot") + xlab("Diastole") + ylab("Density") + theme_bw() + scale_fill_manual(values=c("#15158a", "#eb4034"))
dev.off()
ggplot(data) + geom_density(aes(x = Diastole, fill = Target), alpha=0.8) + scale_x_log10(breaks = c(100, 1000, 10000)) + ggtitle("Diastole Density Plot") + xlab("Diastole") + ylab("Density") + theme_bw() + scale_fill_manual(values=c("#15158a", "#eb4034"))
# saves plot
png(file="../figures/diastole_dist.png", width=600, height=350)
ggplot(data) + geom_density(aes(x = Diastole, fill = Target), alpha=0.8) + ggtitle("Diastole Density Plot") + xlab("Diastole") + ylab("Density") + theme_bw() + scale_fill_manual(values=c("#15158a", "#eb4034"))
dev.off()
ggplot(data) + geom_density(aes(x = Diastole, fill = Target), alpha=0.8) + scale_x_log10(breaks = c(10, 100, 1000)) + ggtitle("Diastole Density Plot") + xlab("Diastole") + ylab("Density") + theme_bw() + scale_fill_manual(values=c("#15158a", "#eb4034"))
# saves plot
png(file="../figures/diastole_dist.png", width=600, height=350)
ggplot(data) + geom_density(aes(x = Diastole, fill = Target), alpha=0.8) + ggtitle("Diastole Density Plot") + xlab("Diastole") + ylab("Density") + theme_bw() + scale_fill_manual(values=c("#15158a", "#eb4034"))
dev.off()
ggplot(data) + geom_density(aes(x = Diastole, fill = Target), alpha=0.8) + scale_x_log10(breaks = c(10, 100, 1000)) + ggtitle("Diastole Density Plot") + xlab("Diastole") + ylab("Density") + theme_bw() + scale_fill_manual(values=c("#15158a", "#eb4034"))
# saves plot
png(file="../figures/diastole_dist.png", width=600, height=350)
ggplot(data) + geom_density(aes(x = Diastole, fill = Target), alpha=0.8) + scale_x_log10(breaks = c(10, 100, 1000)) + ggtitle("Diastole Density Plot") + xlab("Diastole") + ylab("Density") + theme_bw() + scale_fill_manual(values=c("#15158a", "#eb4034"))
dev.off()
ggplot(data) + geom_density(aes(x = Systole, fill = Target), alpha=0.8) + scale_x_log10(breaks = c(10, 100, 1000)) + ggtitle("Systole Density Plot") + xlab("Systole") + ylab("Density") + theme_bw() + scale_fill_manual(values=c("#15158a", "#eb4034"))
# saves plot
png(file="../figures/systole_dist.png", width=600, height=350)
ggplot(data) + geom_density(aes(x = Systole, fill = Target), alpha=0.8) + scale_x_log10(breaks = c(10, 100, 1000)) + ggtitle("Systole Density Plot") + xlab("Systole") + ylab("Density") + theme_bw() + scale_fill_manual(values=c("#15158a", "#eb4034"))
dev.off()
# removes observation for which 'Systole' or 'Diastole' has negative values
data <- subset(data, Systole > 0 & Diastole > 0)
# removes 'ap_hi' and 'ap_lo' outliers
iqr_multiplier = 5
ap_hi_upper_threshold <- quantile(data$Systole, .75) + iqr_multiplier * (quantile(data$Systole, .75) - quantile(data$Systole, .25))
ap_hi_lower_threshold <- quantile(data$Systole, .25) - iqr_multiplier * (quantile(data$Systole, .75) - quantile(data$Systole, .25))
ap_lo_upper_threshold <- quantile(data$Diastole, .75) + iqr_multiplier * (quantile(data$Diastole, .75) - quantile(data$Diastole, .25))
ap_lo_lower_threshold <- quantile(data$Diastole, .25) - iqr_multiplier * (quantile(data$Diastole, .75) - quantile(data$Diastole, .25))
data <- subset(data, Systole < ap_hi_upper_threshold & Systole > ap_hi_lower_threshold & Diastole < ap_lo_upper_threshold & Diastole > ap_lo_lower_threshold)
# removes 'height' outliers'
height_iqr_multiplier = 1.5
height_upper_threshold <- quantile(data$Height, .75) + height_iqr_multiplier * (quantile(data$Height, .75) - quantile(data$Height, .25))
height_lower_threshold <- quantile(data$Height, .25) - height_iqr_multiplier * (quantile(data$Height, .75) - quantile(data$Height, .25))
data <- subset(data, Height > height_lower_threshold & Height < height_upper_threshold)
# removes 'weight' outliers'
weight_iqr_multiplier = 1.5
weight_upper_threshold <- quantile(data$Weight, .75) + weight_iqr_multiplier * (quantile(data$Weight, .75) - quantile(data$Weight, .25))
weight_lower_threshold <- quantile(data$Weight, .25) - weight_iqr_multiplier * (quantile(data$Weight, .75) - quantile(data$Weight, .25))
data <- subset(data, Weight > weight_lower_threshold & Weight < weight_upper_threshold)
data$Age = scale(data$Age)
data$Height = scale(data$Height)
data$Weight = scale(data$Weight)
data$BMI = scale(data$BMI)
data$Systole = scale(data$Systole)
data$Diastole = scale(data$Diastole)
# summerizes newly encoded dataset
summary(data)
# drops 'id' attribute from the dataset
data <- subset(data, select = -c(id))
# sets wroking directory to file's directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# reads dataset
data <- read.csv2("../data/cardio.csv")
# drops 'id' attribute from the dataset
data <- subset(data, select = -c(id))
# recoding categorical or ordered data into readable format
data$cardio <- as.factor(ifelse(data$cardio == 0, "Negative", "Positive"))
data$active <- as.factor(ifelse(data$active == 0, "Inactive", "Active"))
data$alco <- as.factor(ifelse(data$alco == 0, "Non-alcoholic", "Alcoholic"))
data$smoke <- as.factor(ifelse(data$smoke == 0, "Non-smoker", "Smoker"))
data$gluc <- as.ordered(ifelse(data$gluc == 1, "Normal", ifelse(data$gluc == 2, "Above Normal", "Well Above Normal")))
data$cholesterol <- as.ordered(ifelse(data$cholesterol == 1, "Normal", ifelse(data$cholesterol == 2, "Above Normal", "Well Above Normal")))
data$gender <- as.factor(ifelse(data$gender == 1, "Woman", "Man"))
# converts 'weight' from character to numeric
data$weight <- unfactor(data$weight)
# converts unit of 'age' from days to years
data$age <- round(data$age / 365, digits = 0)
# creates 'BMI' column from corresponding 'height' and 'weight'
data$BMI <- (data$weight / ((data$height * 0.01) ^ 2))
# changes column names to readable format
colnames(data) <- c("Age", "Gender", "Height", "Weight", "Systole", "Diastole", "Cholesterol", "Glucose", "Smoking", "Alcohol", "Active", "Target", "BMI")
# change blood pressure into three levels: Low, Normal, High
data$BloodPressure = ifelse((data$Systole >= 140 | data$Diastole >= 90), "High", ifelse((data$Systole <= 90 | data$Diastole <= 60), "Low", "Normal"))
data$BloodPressure <- as.factor(data$BloodPressure)
head(data)
# removes observation for which 'Systole' or 'Diastole' has negative values
data <- subset(data, Systole > 0 & Diastole > 0)
# removes 'ap_hi' and 'ap_lo' outliers
iqr_multiplier = 10
ap_hi_upper_threshold <- quantile(data$Systole, .75) + iqr_multiplier * (quantile(data$Systole, .75) - quantile(data$Systole, .25))
ap_hi_lower_threshold <- quantile(data$Systole, .25) - iqr_multiplier * (quantile(data$Systole, .75) - quantile(data$Systole, .25))
ap_lo_upper_threshold <- quantile(data$Diastole, .75) + iqr_multiplier * (quantile(data$Diastole, .75) - quantile(data$Diastole, .25))
ap_lo_lower_threshold <- quantile(data$Diastole, .25) - iqr_multiplier * (quantile(data$Diastole, .75) - quantile(data$Diastole, .25))
data <- subset(data, Systole < ap_hi_upper_threshold & Systole > ap_hi_lower_threshold & Diastole < ap_lo_upper_threshold & Diastole > ap_lo_lower_threshold)
# removes 'height' outliers'
height_iqr_multiplier = 1.5
height_upper_threshold <- quantile(data$Height, .75) + height_iqr_multiplier * (quantile(data$Height, .75) - quantile(data$Height, .25))
height_lower_threshold <- quantile(data$Height, .25) - height_iqr_multiplier * (quantile(data$Height, .75) - quantile(data$Height, .25))
data <- subset(data, Height > height_lower_threshold & Height < height_upper_threshold)
# removes 'weight' outliers'
weight_iqr_multiplier = 1.5
weight_upper_threshold <- quantile(data$Weight, .75) + weight_iqr_multiplier * (quantile(data$Weight, .75) - quantile(data$Weight, .25))
weight_lower_threshold <- quantile(data$Weight, .25) - weight_iqr_multiplier * (quantile(data$Weight, .75) - quantile(data$Weight, .25))
data <- subset(data, Weight > weight_lower_threshold & Weight < weight_upper_threshold)
#data$Age = scale(data$Age)
#data$Height = scale(data$Height)
#data$Weight = scale(data$Weight)
#data$BMI = scale(data$BMI)
#data$Systole = scale(data$Systole)
#data$Diastole = scale(data$Diastole)
# summerizes newly encoded dataset
summary(data)
# removes observation for which 'Systole' or 'Diastole' has negative values
data <- subset(data, Systole > 0 & Diastole > 0)
# removes 'ap_hi' and 'ap_lo' outliers
iqr_multiplier = 8
ap_hi_upper_threshold <- quantile(data$Systole, .75) + iqr_multiplier * (quantile(data$Systole, .75) - quantile(data$Systole, .25))
ap_hi_lower_threshold <- quantile(data$Systole, .25) - iqr_multiplier * (quantile(data$Systole, .75) - quantile(data$Systole, .25))
ap_lo_upper_threshold <- quantile(data$Diastole, .75) + iqr_multiplier * (quantile(data$Diastole, .75) - quantile(data$Diastole, .25))
ap_lo_lower_threshold <- quantile(data$Diastole, .25) - iqr_multiplier * (quantile(data$Diastole, .75) - quantile(data$Diastole, .25))
data <- subset(data, Systole < ap_hi_upper_threshold & Systole > ap_hi_lower_threshold & Diastole < ap_lo_upper_threshold & Diastole > ap_lo_lower_threshold)
# removes 'height' outliers'
height_iqr_multiplier = 1.5
height_upper_threshold <- quantile(data$Height, .75) + height_iqr_multiplier * (quantile(data$Height, .75) - quantile(data$Height, .25))
height_lower_threshold <- quantile(data$Height, .25) - height_iqr_multiplier * (quantile(data$Height, .75) - quantile(data$Height, .25))
data <- subset(data, Height > height_lower_threshold & Height < height_upper_threshold)
# removes 'weight' outliers'
weight_iqr_multiplier = 1.5
weight_upper_threshold <- quantile(data$Weight, .75) + weight_iqr_multiplier * (quantile(data$Weight, .75) - quantile(data$Weight, .25))
weight_lower_threshold <- quantile(data$Weight, .25) - weight_iqr_multiplier * (quantile(data$Weight, .75) - quantile(data$Weight, .25))
data <- subset(data, Weight > weight_lower_threshold & Weight < weight_upper_threshold)
#data$Age = scale(data$Age)
#data$Height = scale(data$Height)
#data$Weight = scale(data$Weight)
#data$BMI = scale(data$BMI)
#data$Systole = scale(data$Systole)
#data$Diastole = scale(data$Diastole)
# summerizes newly encoded dataset
summary(data)
# removes observation for which 'Systole' or 'Diastole' has negative values
data <- subset(data, Systole > 0 & Diastole > 0)
# removes 'ap_hi' and 'ap_lo' outliers
iqr_multiplier = 5
ap_hi_upper_threshold <- quantile(data$Systole, .75) + iqr_multiplier * (quantile(data$Systole, .75) - quantile(data$Systole, .25))
ap_hi_lower_threshold <- quantile(data$Systole, .25) - iqr_multiplier * (quantile(data$Systole, .75) - quantile(data$Systole, .25))
ap_lo_upper_threshold <- quantile(data$Diastole, .75) + iqr_multiplier * (quantile(data$Diastole, .75) - quantile(data$Diastole, .25))
ap_lo_lower_threshold <- quantile(data$Diastole, .25) - iqr_multiplier * (quantile(data$Diastole, .75) - quantile(data$Diastole, .25))
data <- subset(data, Systole < ap_hi_upper_threshold & Systole > ap_hi_lower_threshold & Diastole < ap_lo_upper_threshold & Diastole > ap_lo_lower_threshold)
# removes 'height' outliers'
height_iqr_multiplier = 1.5
height_upper_threshold <- quantile(data$Height, .75) + height_iqr_multiplier * (quantile(data$Height, .75) - quantile(data$Height, .25))
height_lower_threshold <- quantile(data$Height, .25) - height_iqr_multiplier * (quantile(data$Height, .75) - quantile(data$Height, .25))
data <- subset(data, Height > height_lower_threshold & Height < height_upper_threshold)
# removes 'weight' outliers'
weight_iqr_multiplier = 1.5
weight_upper_threshold <- quantile(data$Weight, .75) + weight_iqr_multiplier * (quantile(data$Weight, .75) - quantile(data$Weight, .25))
weight_lower_threshold <- quantile(data$Weight, .25) - weight_iqr_multiplier * (quantile(data$Weight, .75) - quantile(data$Weight, .25))
data <- subset(data, Weight > weight_lower_threshold & Weight < weight_upper_threshold)
#data$Age = scale(data$Age)
#data$Height = scale(data$Height)
#data$Weight = scale(data$Weight)
#data$BMI = scale(data$BMI)
#data$Systole = scale(data$Systole)
#data$Diastole = scale(data$Diastole)
# summerizes newly encoded dataset
summary(data)
ggplot(data) + geom_bar(aes(x = Cholesterol, fill = Target), position = 'dodge', alpha=0.8) + theme_bw() + ggtitle(" Cholesterol Distribution") + xlab(" Cholesterol") + ylab("Count") + scale_fill_manual(values=c("#15158a", "#eb4034"))
data[data$Systole < data$Diastole]
data[,data$Systole < data$Diastole]
data[data$Systole < data$Diastole,]
dim(data[data$Systole > data$Diastole,])
dim(data[data$Systole > data$Diastole,])
data <- data[data$Systole > data$Diastole,]
# summerizes newly encoded dataset
summary(data)
png(file="../figures/box_age.png", width=600, height=350)
p1 <- ggplot(data = data, aes(x=Target,y=Weight)) +
geom_point(aes(color=Weight), alpha=0.2) +
geom_boxplot(outlier.size=4, outlier.colour='blue', alpha=0.1)
plot(p1)
dev.off()
png(file="../figures/box_weight.png", width=600, height=350)
p1 <- ggplot(data = data, aes(x=Target,y=Weight)) +
geom_point(aes(color=Weight), alpha=0.2) +
geom_boxplot(outlier.size=4, outlier.colour='blue', alpha=0.1)
dev.off()
png(file="../figures/box_height.png", width=600, height=350)
p2 <- ggplot(data = data, aes(x=Target,y=Height)) +
geom_point(aes(color=Height), alpha=0.2) +
geom_boxplot(outlier.size=4, outlier.colour='blue', alpha=0.1)
dev.off()
png(file="../figures/box_systole.png", width=600, height=350)
p3 <- ggplot(data = data, aes(x=Target,y=Systole)) +
geom_point(aes(color=Systole), alpha=0.2) +
geom_boxplot(outlier.size=4, outlier.colour='blue', alpha=0.1)
dev.off()
png(file="../figures/box_diastole.png", width=600, height=350)
p4 <- ggplot(data = data, aes(x=Target,y=Diastole)) +
geom_point(aes(color=Diastole), alpha=0.2) +
geom_boxplot(outlier.size=4, outlier.colour='blue', alpha=0.1)
dev.off()
png(file="../figures/box_bmi.png", width=600, height=350)
p5 <- ggplot(data = data, aes(x=Target,y=BMI)) +
geom_point(aes(color=BMI), alpha=0.2) +
geom_boxplot(outlier.size=4, outlier.colour='blue', alpha=0.1)
dev.off()
png(file="../figures/box_age.png", width=600, height=350)
ggplot(data = data, aes(x=Target,y=Weight)) +
geom_point(aes(color=Weight), alpha=0.2) +
geom_boxplot(outlier.size=4, outlier.colour='blue', alpha=0.1)
dev.off()
png(file="../figures/box_weight.png", width=600, height=350)
ggplot(data = data, aes(x=Target,y=Weight)) +
geom_point(aes(color=Weight), alpha=0.2) +
geom_boxplot(outlier.size=4, outlier.colour='blue', alpha=0.1)
dev.off()
png(file="../figures/box_height.png", width=600, height=350)
ggplot(data = data, aes(x=Target,y=Height)) +
geom_point(aes(color=Height), alpha=0.2) +
geom_boxplot(outlier.size=4, outlier.colour='blue', alpha=0.1)
dev.off()
png(file="../figures/box_systole.png", width=600, height=350)
ggplot(data = data, aes(x=Target,y=Systole)) +
geom_point(aes(color=Systole), alpha=0.2) +
geom_boxplot(outlier.size=4, outlier.colour='blue', alpha=0.1)
dev.off()
png(file="../figures/box_diastole.png", width=600, height=350)
ggplot(data = data, aes(x=Target,y=Diastole)) +
geom_point(aes(color=Diastole), alpha=0.2) +
geom_boxplot(outlier.size=4, outlier.colour='blue', alpha=0.1)
dev.off()
png(file="../figures/box_bmi.png", width=600, height=350)
ggplot(data = data, aes(x=Target,y=BMI)) +
geom_point(aes(color=BMI), alpha=0.2) +
geom_boxplot(outlier.size=4, outlier.colour='blue', alpha=0.1)
dev.off()
png(file="../figures/box_bmi.png", width=600, height=350)
ggplot(data = data, aes(x=Target,fill=BMI)) +
geom_point(aes(color=BMI), alpha=0.2) +
geom_boxplot(outlier.size=4, outlier.colour='blue', alpha=0.1)
png(file="../figures/box_bmi.png", width=600, height=350)
ggplot(data = data, aes(x=Target,y=BMI, fill = Target)) +
geom_point(aes(color=BMI), alpha=0.2) +
geom_boxplot(outlier.size=4, outlier.colour='blue', alpha=0.1)
dev.off()
png(file="../figures/box_bmi.png", width=600, height=350)
ggplot(data = data, aes(x=Target,y=BMI, fill = Target)) +
geom_point(aes(color=BMI), alpha=0.2) +
geom_boxplot(outlier.size=4, outlier.colour='blue', alpha=0.1) + theme_bw()
dev.off()
png(file="../figures/box_bmi.png", width=600, height=350)
ggplot(data = data, aes(x=Target,y=BMI, fill = Target)) +
geom_point(aes(color=BMI), alpha=0.2) +
geom_boxplot(outlier.size=1, outlier.colour='blue', alpha=0.1) + theme_bw()
dev.off()
png(file="../figures/box_bmi.png", width=600, height=350)
ggplot(data = data, aes(x=Target,y=BMI, fill = Target)) +
geom_point(aes(color=BMI), alpha=0.8) +
geom_boxplot(outlier.size=1, outlier.colour='blue', alpha=0.1) + theme_bw()
dev.off()
png(file="../figures/box_bmi.png", width=600, height=350)
ggplot(data = data, aes(x=Target,y=BMI, fill = Gender)) + geom_boxplot(outlier.size=4, outlier.colour='blue', alpha=0.1) + theme_bw()
dev.off()
png(file="../figures/box_bmi_gender.png", width=600, height=350)
ggplot(data = data, aes(x=Target,y=BMI, fill = Gender)) + geom_boxplot(outlier.size=4, outlier.colour='blue', alpha=0.1) + theme_bw()
dev.off()
png(file="../figures/box_bmi_gender.png", width=600, height=350)
ggplot(data = data, aes(x = Target, y = BMI, fill = Gender)) + geom_boxplot(outlier.size = 4, outlier.colour = 'blue', alpha = 0.1) + theme_bw()
dev.off()
png(file="../figures/box_diastole.png", width=600, height=350)
ggplot(data = data, aes(x= Target, y = Smoking, fill = Gender)) + geom_boxplot(outlier.size = 4, outlier.colour = 'blue', alpha = 0.1) + theme_bw()
dev.off()
png(file="../figures/box_bmi_gluc.png", width=600, height=350)
ggplot(data = data, aes(x= Target, y = BMI, fill = Glucose)) + geom_boxplot(outlier.size = 4, outlier.colour = 'blue', alpha = 0.1) + theme_bw()
dev.off()
png(file="../figures/box_age_bp.png", width=600, height=350)
ggplot(data = data, aes(x = Target, y = Age, fill = BloodPressure)) + geom_boxplot(outlier.size = 4, outlier.colour = 'blue', alpha = 0.1) + theme_bw()
dev.off()
ggplot(subset(data, Smoking == "Smoker")) + geom_bar(aes(x = BloodPressure, fill = Target), position = 'dodge', alpha=0.8) + theme_bw() + ggtitle("BloodPressure Distribution") + xlab("BloodPressure") + ylab("Count") + scale_fill_manual(values=c("#15158a", "#eb4034"))
ggplot(subset(data, Smoking == "Smoker")) + geom_bar(aes(x = Gender, fill = Target), position = 'dodge', alpha=0.8) + theme_bw() + ggtitle("BloodPressure Distribution") + xlab("BloodPressure") + ylab("Count") + scale_fill_manual(values=c("#15158a", "#eb4034"))
ggplot(subset(data, Alcohol == "Alcoholic")) + geom_bar(aes(x = Gender, fill = Target), position = 'dodge', alpha=0.8) + theme_bw() + ggtitle("BloodPressure Distribution") + xlab("BloodPressure") + ylab("Count") + scale_fill_manual(values=c("#15158a", "#eb4034"))
ggplot(subset(data, BMI > 25)) + geom_bar(aes(x = Gender, fill = Target), position = 'dodge', alpha=0.8) + theme_bw() + ggtitle("BloodPressure Distribution") + xlab("BloodPressure") + ylab("Count") + scale_fill_manual(values=c("#15158a", "#eb4034"))
cor(data)
png(file="../figures/box_bmi_gender.png", width=600, height=350)
ggplot(data = data, aes(x = Gender, y = BMI, fill = Target)) + geom_boxplot(outlier.size = 4, outlier.colour = 'blue', alpha = 0.1) + theme_bw()
dev.off()
png(file="../figures/box_bmi_gluc.png", width=600, height=350)
ggplot(data = data, aes(x= Glucose, y = BMI, fill = Target)) + geom_boxplot(outlier.size = 4, outlier.colour = 'blue', alpha = 0.1) + theme_bw()
dev.off()
png(file="../figures/box_bmi_bp.png", width=600, height=350)
ggplot(data = data, aes(x = BloodPressure, y = BMI, fill = Target)) + geom_boxplot(outlier.size = 4, outlier.colour = 'blue', alpha = 0.1) + theme_bw()
dev.off()
png(file="../figures/box_bmi_bp.png", width=600, height=350)
ggplot(data = data, aes(x = Systole, y = BMI, fill = Target)) + geom_boxplot(outlier.size = 4, outlier.colour = 'blue', alpha = 0.1) + theme_bw()
dev.off()
png(file="../figures/box_bmi_bp.png", width=600, height=350)
ggplot(data = data, aes(x = Cholesterol, y = Systole, fill = Target)) + geom_boxplot(outlier.size = 4, outlier.colour = 'blue', alpha = 0.1) + theme_bw()
dev.off()
png(file="../figures/box_bmi_bp.png", width=600, height=350)
ggplot(data = data, aes(x = Cholesterol, y = Systole, fill = Target)) + geom_boxplot(outlier.size = 4, outlier.colour = 'blue', alpha = 0.1) + theme_bw()
dev.off()
png(file="../figures/box_chol_systole.png", width=600, height=350)
ggplot(data = data, aes(x= Glucose, y = BMI, fill = Target)) + geom_boxplot(outlier.size = 4, outlier.colour = 'blue', alpha = 0.1) + theme_bw()
dev.off()
png(file="../figures/box_smk_systole.png", width=600, height=350)
ggplot(data = data, aes(x = Smoking, y = Systole, fill = Target)) + geom_boxplot(outlier.size = 4, outlier.colour = 'blue', alpha = 0.1) + theme_bw()
dev.off()
png(file="../figures/box_smk_systole.png", width=600, height=350)
ggplot(data = data, aes(x = Smoking, y = Systole, fill = Target)) + geom_boxplot(outlier.size = 4, outlier.colour = 'blue', alpha = 0.1) + theme_bw()
dev.off()
png(file="../figures/box_chol_systole.png", width=600, height=350)
ggplot(data = data, aes(x= Glucose, y = BMI, fill = Target)) + geom_boxplot(outlier.size = 4, outlier.colour = 'blue', alpha = 0.1) + theme_bw()
dev.off()
png(file="../figures/box_bmi_gender.png", width=600, height=350)
ggplot(data = data, aes(x = Gender, y = BMI, fill = Target)) + geom_boxplot(outlier.size = 4, outlier.colour = 'blue', alpha = 0.1) + theme_bw()
dev.off()
ggplot(subset(data, Target == "Positive")) + geom_density(aes(x = Age, fill = Smoking), alpha=0.8) + ggtitle("Age Density Plot") + xlab("Age") + ylab("Density") + theme_bw() + scale_fill_manual(values=c("#15158a", "#eb4034"))
ggplot(subset(data, Target == "Positive")) + geom_density(aes(x = BMI, fill = Smoking), alpha=0.8) + ggtitle("Age Density Plot") + xlab("Age") + ylab("Density") + theme_bw() + scale_fill_manual(values=c("#15158a", "#eb4034"))
ggplot(subset(data, Target == "Positive")) + geom_density(aes(x = BMI, fill = Alcoho), alpha=0.8) + ggtitle("Age Density Plot") + xlab("Age") + ylab("Density") + theme_bw() + scale_fill_manual(values=c("#15158a", "#eb4034"))
ggplot(subset(data, Target == "Positive")) + geom_density(aes(x = BMI, fill = Alcohol), alpha=0.8) + ggtitle("Age Density Plot") + xlab("Age") + ylab("Density") + theme_bw() + scale_fill_manual(values=c("#15158a", "#eb4034"))
ggplot(subset(data, Target == "Positive")) + geom_density(aes(x = BMI, fill = BloodPressure), alpha=0.8) + ggtitle("Age Density Plot") + xlab("Age") + ylab("Density") + theme_bw() + scale_fill_manual(values=c("#15158a", "#eb4034"))
ggplot(subset(data, Target == "Positive")) + geom_density(aes(x = BMI, fill = BloodPressure), alpha=0.8) + ggtitle("Age Density Plot") + xlab("Age") + ylab("Density") + theme_bw() + scale_fill_manual(values=c("#15158a", "#eb4034", "#eb4031"))
ggplot(subset(data, Target == "Positive")) + geom_density(aes(x = BMI, fill = Gender), alpha=0.8) + ggtitle("Age Density Plot") + xlab("Age") + ylab("Density") + theme_bw() + scale_fill_manual(values=c("#15158a", "#eb4034"))
png(file="../figures/box_act_bmi.png", width=600, height=350)
ggplot(data = data, aes(x = Active, y = BMI)) +  geom_boxplot(outlier.size=4, outlier.colour='blue', alpha=0.1)
dev.off()
png(file="../figures/box_act_bmi.png", width=600, height=350)
ggplot(data = data, aes(x = Active, y = BMI)) +  geom_boxplot(outlier.size=4, outlier.colour='blue', alpha=0.1) + theme_bw()
dev.off()
png(file="../figures/box_act_bmi.png", width=600, height=350)
ggplot(data = data, aes(x = Active, y = Weight)) +  geom_boxplot(outlier.size=4, outlier.colour='blue', alpha=0.1) + theme_bw()
dev.off()
unclass(training_set$Target)
png(file="../figures/box_age.png", width=600, height=350)
p1 <- ggplot(data = data, aes(x=Target,y=Weight)) +
geom_point(aes(color=Weight), alpha=0.2) +
geom_boxplot(outlier.size=4, outlier.colour='blue', alpha=0.1)
plot(p1)
dev.off()
png(file="../figures/box_weight.png", width=600, height=350)
p1 <- ggplot(data = data, aes(x=Target,y=Weight)) +
geom_point(aes(color=Weight), alpha=0.2) +
geom_boxplot(outlier.size=4, outlier.colour='blue', alpha=0.1)
plot(p1)
dev.off()
png(file="../figures/box_height.png", width=600, height=350)
p2 <- ggplot(data = data, aes(x=Target,y=Height)) +
geom_point(aes(color=Height), alpha=0.2) +
geom_boxplot(outlier.size=4, outlier.colour='blue', alpha=0.1)
plot(p2)
dev.off()
png(file="../figures/box_systole.png", width=600, height=350)
p3 <- ggplot(data = data, aes(x=Target,y=Systole)) +
geom_point(aes(color=Systole), alpha=0.2) +
geom_boxplot(outlier.size=4, outlier.colour='blue', alpha=0.1)
plot(p3)
dev.off()
png(file="../figures/box_diastole.png", width=600, height=350)
p4 <- ggplot(data = data, aes(x=Target,y=Diastole)) +
geom_point(aes(color=Diastole), alpha=0.2) +
geom_boxplot(outlier.size=4, outlier.colour='blue', alpha=0.1)
plot(p4)
dev.off()
png(file="../figures/box_bmi.png", width=600, height=350)
p5 <- ggplot(data = data, aes(x=Target,y=BMI)) +
geom_point(aes(color=BMI), alpha=0.2) +
geom_boxplot(outlier.size=4, outlier.colour='blue', alpha=0.1)
plot(p5)
dev.off()
set.seed(19941021)
smpl_split <- initial_split(data, prop = 0.15, strata = "Target")
smpl_data <- training(smpl_split)
subsets <- c(3, 5, 7, 10, 13)
fctrl <- rfeControl(functions = rfFuncs, method = "cv", number = 5, verbose = FALSE)
fProfile <- rfe(smpl_data[, which(colnames(smpl_data) != "Target")], smpl_data$Target, sizes = subsets, rfeControl = fctrl)
set.seed(19941021)
smpl_split <- initial_split(data, prop = 0.15, strata = "Target")
smpl_data <- training(smpl_split)
subsets <- c(3, 5, 7, 10, 13)
fctrl <- rfeControl(functions = rfFuncs, method = "cv", number = 5, verbose = FALSE)
fProfile <- rfe(smpl_data[, which(colnames(smpl_data) != "Target")], smpl_data$Target, sizes = subsets, rfeControl = fctrl)
