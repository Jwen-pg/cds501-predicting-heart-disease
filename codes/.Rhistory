palette = colorRampPalette(c("skyblue", "blue", "yellow"))(20)
heatmap(cor, col = palette, scale = "column")
# correlation between attributes
cor <- cor(data[, c("Age", "BMI", "Systole", "Diastole", "Glucose", "Cholesterol", "Smoking", "Alcoholic", "Active", "Target")])
data.corr <- rcorr(as.matrix(data))
data.coeff <- data.corr$r
data.p <- data.corr$P
palette = colorRampPalette(c("skyblue", "blue", "yellow"))(20)
heatmap(cor, col = palette, scale = "column")
cor <- cor(data[, c("Age", "BMI", "Systole", "Diastole", "Glucose", "Cholesterol", "Smoking", "Alcoholic", "Active", "Target")])
data.corr <- rcorr(as.matrix(data))
data.coeff <- data.corr$r
data.p <- data.corr$P
cor <- cor(data[, c("Age", "BMI", "Systole", "Diastole", "Glucose", "Cholesterol", "Smoking", "Alcoholic", "Active", "Target")])
data.corr <- rcorr(as.matrix(data))
data.coeff <- data.corr$r
data.p <- data.corr$P
library(ggplot2)
library(varhandle)
###################################################
################## Loading Data ###################
###################################################
# sets directory of current file as working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# reads dataset
data <- read.csv2("../data/cardio.csv")
# drops 'id' attribute from the dataset
data <- subset(data, select = -c(id))
# recoding categorical or ordered data into readable format
data$cardio <- as.factor(ifelse(data$cardio == 0, "Negative", "Positive"))
data$active <- as.factor(ifelse(data$active == 0, "Inactive", "Active"))
data$alco <- as.factor(ifelse(data$alco == 0, "Non-alcoholic", "Alcoholic"))
data$smoke <- as.factor(ifelse(data$smoke == 0, "Non-smoker", "Smoker"))
data$gluc <- as.ordered(ifelse(data$gluc == 1, "Normal", ifelse(data$gluc == 2, "Above Normal", "Well Above Normal")))
data$cholesterol <- as.ordered(ifelse(data$cholesterol == 1, "Normal", ifelse(data$cholesterol == 2, "Above Normal", "Well Above Normal")))
data$gender <- as.factor(ifelse(data$gender == 1, "Woman", "Man"))
# converts 'weight' from character to numeric
data$weight <- unfactor(data$weight)
# converts unit of 'age' from days to years
data$age <- round(data$age / 365, digits = 0)
# creates 'BMI' column from corresponding 'height' and 'weight'
# changes column names to readable format
colnames(data) <- c("Age", "Gender", "Height", "Weight", "Systole", "Diastole", "Cholesterol", "Glucose", "Smoking", "Alcohol", "Active", "Target")
###################################################
############## Exploratory Analysis ###############
###################################################
# explores types of the attributes
sapply(data, class)
# summerizes dataset
summary(data)
# correlation between attributes
cor <- cor(data[, c("Age", "BMI", "Systole", "Diastole", "Glucose", "Cholesterol", "Smoking", "Alcoholic", "Active", "Target")])
data.corr <- rcorr(as.matrix(data))
data.coeff <- data.corr$r
data.p <- data.corr$P
palette = colorRampPalette(c("skyblue", "blue", "yellow"))(20)
heatmap(cor, col = palette, scale = "column")
# summerizes dataset
summary(data)
# converts unit of 'age' from days to years
data$age <- round(data$age / 365, digits = 0)
# creates 'BMI' column from corresponding 'height' and 'weight'
data$BMI <- (data$Weight / (data$Height ^ 2))
# changes column names to readable format
colnames(data) <- c("Age", "Gender", "Height", "Weight", "Systole", "Diastole", "Cholesterol", "Glucose", "Smoking", "Alcohol", "Active", "Target")
# summerizes dataset
summary(data)
head(data)
# creates 'BMI' column from corresponding 'height' and 'weight'
data$BMI <- (data$weight / (data$height ^ 2))
head(data)
# sets directory of current file as working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# reads dataset
data <- read.csv2("../data/cardio.csv")
# drops 'id' attribute from the dataset
data <- subset(data, select = -c(id))
# recoding categorical or ordered data into readable format
data$cardio <- as.factor(ifelse(data$cardio == 0, "Negative", "Positive"))
data$active <- as.factor(ifelse(data$active == 0, "Inactive", "Active"))
data$alco <- as.factor(ifelse(data$alco == 0, "Non-alcoholic", "Alcoholic"))
data$smoke <- as.factor(ifelse(data$smoke == 0, "Non-smoker", "Smoker"))
data$gluc <- as.ordered(ifelse(data$gluc == 1, "Normal", ifelse(data$gluc == 2, "Above Normal", "Well Above Normal")))
data$cholesterol <- as.ordered(ifelse(data$cholesterol == 1, "Normal", ifelse(data$cholesterol == 2, "Above Normal", "Well Above Normal")))
data$gender <- as.factor(ifelse(data$gender == 1, "Woman", "Man"))
# converts 'weight' from character to numeric
data$weight <- unfactor(data$weight)
# converts unit of 'age' from days to years
data$age <- round(data$age / 365, digits = 0)
# creates 'BMI' column from corresponding 'height' and 'weight'
data$BMI <- (data$weight / (data$height ^ 2))
head(data)
# changes column names to readable format
colnames(data) <- c("Age", "Gender", "Height", "Weight", "Systole", "Diastole", "Cholesterol", "Glucose", "Smoking", "Alcohol", "Active", "Target")
# summerizes dataset
summary(data)
library(ggplot2)
library(varhandle)
###################################################
################## Loading Data ###################
###################################################
# sets directory of current file as working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# reads dataset
data <- read.csv2("../data/cardio.csv")
# drops 'id' attribute from the dataset
data <- subset(data, select = -c(id))
# recoding categorical or ordered data into readable format
data$cardio <- as.factor(ifelse(data$cardio == 0, "Negative", "Positive"))
data$active <- as.factor(ifelse(data$active == 0, "Inactive", "Active"))
data$alco <- as.factor(ifelse(data$alco == 0, "Non-alcoholic", "Alcoholic"))
data$smoke <- as.factor(ifelse(data$smoke == 0, "Non-smoker", "Smoker"))
data$gluc <- as.ordered(ifelse(data$gluc == 1, "Normal", ifelse(data$gluc == 2, "Above Normal", "Well Above Normal")))
data$cholesterol <- as.ordered(ifelse(data$cholesterol == 1, "Normal", ifelse(data$cholesterol == 2, "Above Normal", "Well Above Normal")))
data$gender <- as.factor(ifelse(data$gender == 1, "Woman", "Man"))
# converts 'weight' from character to numeric
data$weight <- unfactor(data$weight)
# converts unit of 'age' from days to years
data$age <- round(data$age / 365, digits = 0)
# creates 'BMI' column from corresponding 'height' and 'weight'
data$BMI <- (data$weight / ((data$height * 0.01) ^ 2))
# changes column names to readable format
colnames(data) <- c("Age", "Gender", "Height", "Weight", "Systole", "Diastole", "Cholesterol", "Glucose", "Smoking", "Alcohol", "Active", "Target", "BMI")
# summerizes dataset
summary(data)
cor <- cor(data[, c("Age", "BMI", "Systole", "Diastole", "Glucose", "Cholesterol", "Smoking", "Alcoholic", "Active", "Target")])
data.corr <- rcorr(as.matrix(data))
data.coeff <- data.corr$r
data.p <- data.corr$P
palette = colorRampPalette(c("skyblue", "blue", "yellow"))(20)
heatmap(cor, col = palette, scale = "column")
# correlation between attributes
cor <- cor(data[, c("Age", "BMI", "Systole", "Diastole", "Glucose", "Cholesterol", "Smoking", "Alcohol", "Active", "Target")])
data.corr <- rcorr(as.matrix(data))
data.coeff <- data.corr$r
data.p <- data.corr$P
palette = colorRampPalette(c("skyblue", "blue", "yellow"))(20)
heatmap(cor, col = palette, scale = "column")
# correlation between attributes
cor <- cor(data[, c("Age", "BMI", "Systole", "Diastole", "Glucose", "Cholesterol", "Smoking", "Alcohol", "Active", "Target")])
data.corr <- rcorr(as.matrix(data))
library(corrplot)
# correlation between attributes
cor <- cor(data[, c("Age", "BMI", "Systole", "Diastole", "Glucose", "Cholesterol", "Smoking", "Alcohol", "Active", "Target")])
data.corr <- rcorr(as.matrix(data))
library(Hmisc)
data.corr <- rcorr(as.matrix(data))
data.coeff <- data.corr$r
data.corr <- rcorr(as.matrix(data))
# summerizes dataset
summary(data)
# correlation between numeric attributes
cor <- cor(data[, c("Age", "BMI", "Systole", "Diastole")])
data.corr <- rcorr(as.matrix(data))
data.coeff <- data.corr$r
data.p <- data.corr$P
palette = colorRampPalette(c("skyblue", "blue", "yellow"))(20)
heatmap(cor, col = palette, scale = "column")
# correlation between numeric attributes
cor <- cor(data[, c("Age", "Height", "Weight", "BMI", "Systole", "Diastole")])
data.corr <- rcorr(as.matrix(data))
data.coeff <- data.corr$r
data.p <- data.corr$P
palette = colorRampPalette(c("skyblue", "blue", "yellow"))(20)
heatmap(cor, col = palette, scale = "column")
cor <- cor(data[, c("Age", "Height", "Weight", "BMI", "Systole", "Diastole")])
palette = colorRampPalette(c("skyblue", "blue", "yellow"))(20)
heatmap(cor, col = palette, scale = "column")
heatmap(cor,scale = "column")
col = palette,
cor <- cor(data[, c("Age", "Height", "Weight", "BMI", "Systole", "Diastole")])
palette = colorRampPalette(c("skyblue", "blue", "yellow"))(20)
heatmap(cor, col = palette, scale = "column")
png(file="../figures/cor_numeric.png", width=600, height=350)
cor <- cor(data[, c("Age", "Height", "Weight", "BMI", "Systole", "Diastole")])
palette = colorRampPalette(c("skyblue", "blue", "yellow"))(20)
heatmap(cor, col = palette, scale = "column")
dev.off()
library(varhandle)
library(corrplot)
library(ggplot2)
###################################################
################## Loading Data ###################
###################################################
# sets directory of current file as working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# reads dataset
data <- read.csv2("../data/cardio.csv")
# drops 'id' attribute from the dataset
data <- subset(data, select = -c(id))
# recoding categorical or ordered data into readable format
data$cardio <- as.factor(ifelse(data$cardio == 0, "Negative", "Positive"))
data$active <- as.factor(ifelse(data$active == 0, "Inactive", "Active"))
data$alco <- as.factor(ifelse(data$alco == 0, "Non-alcoholic", "Alcoholic"))
data$smoke <- as.factor(ifelse(data$smoke == 0, "Non-smoker", "Smoker"))
data$gluc <- as.ordered(ifelse(data$gluc == 1, "Normal", ifelse(data$gluc == 2, "Above Normal", "Well Above Normal")))
data$cholesterol <- as.ordered(ifelse(data$cholesterol == 1, "Normal", ifelse(data$cholesterol == 2, "Above Normal", "Well Above Normal")))
data$gender <- as.factor(ifelse(data$gender == 1, "Woman", "Man"))
# converts 'weight' from character to numeric
data$weight <- unfactor(data$weight)
# converts unit of 'age' from days to years
data$age <- round(data$age / 365, digits = 0)
# creates 'BMI' column from corresponding 'height' and 'weight'
data$BMI <- (data$weight / ((data$height * 0.01) ^ 2))
# changes column names to readable format
colnames(data) <- c("Age", "Gender", "Height", "Weight", "Systole", "Diastole", "Cholesterol", "Glucose", "Smoking", "Alcohol", "Active", "Target", "BMI")
###################################################
############## Exploratory Analysis ###############
###################################################
# explores types of the attributes
sapply(data, class)
# summerizes dataset
summary(data)
# correlation matrix of numeric attributes
png(file="../figures/cor_numeric.png", width=600, height=350)
cor <- cor(data[, c("Age", "Height", "Weight", "BMI", "Systole", "Diastole")])
palette = colorRampPalette(c("skyblue", "blue", "yellow"))(20)
heatmap(cor, col = palette, scale = "column")
dev.off()
library(varhandle)
library(corrplot)
library(ggplot2)
library(varhandle)
library(corrplot)
library(ggplot2)
library(varhandle)
library(corrplot)
library(ggplot2)
# sets directory of current file as working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# sets directory of current file as working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# reads dataset
data <- read.csv2("../data/cardio.csv")
# drops 'id' attribute from the dataset
data <- subset(data, select = -c(id))
# recoding categorical or ordered data into readable format
data$cardio <- as.factor(ifelse(data$cardio == 0, "Negative", "Positive"))
data$active <- as.factor(ifelse(data$active == 0, "Inactive", "Active"))
data$alco <- as.factor(ifelse(data$alco == 0, "Non-alcoholic", "Alcoholic"))
data$smoke <- as.factor(ifelse(data$smoke == 0, "Non-smoker", "Smoker"))
data$gluc <- as.ordered(ifelse(data$gluc == 1, "Normal", ifelse(data$gluc == 2, "Above Normal", "Well Above Normal")))
data$cholesterol <- as.ordered(ifelse(data$cholesterol == 1, "Normal", ifelse(data$cholesterol == 2, "Above Normal", "Well Above Normal")))
data$gender <- as.factor(ifelse(data$gender == 1, "Woman", "Man"))
# converts 'weight' from character to numeric
data$weight <- unfactor(data$weight)
# converts unit of 'age' from days to years
data$age <- round(data$age / 365, digits = 0)
# creates 'BMI' column from corresponding 'height' and 'weight'
data$BMI <- (data$weight / ((data$height * 0.01) ^ 2))
# changes column names to readable format
colnames(data) <- c("Age", "Gender", "Height", "Weight", "Systole", "Diastole", "Cholesterol", "Glucose", "Smoking", "Alcohol", "Active", "Target", "BMI")
head(data)
ributes
# explores types of the attributes
unlist(sapply(data, class))
# summerizes dataset
summary(data)
png(file="../figures/cor_numeric.png", width=600, height=350)
cor <- cor(data[, c("Age", "Height", "Weight", "BMI", "Systole", "Diastole")])
palette = colorRampPalette(c("skyblue", "blue", "yellow"))(20)
heatmap(cor, col = palette, scale = "column")
dev.off()
png(file="../figures/cor_numeric.png", width=600, height=350)
cor <- cor(data[, c("Age", "Height", "Weight", "BMI", "Systole", "Diastole")])
palette = colorRampPalette(c("skyblue", "blue", "yellow"))(20)
heatmap(cor, col = palette, scale = "column")
dev.off()
#png(file="../figures/age_dist.png", width=600, height=350)
ggplot(data) + geom_histogram(aes(x = Age), binwidth = 5, fill = 'grey')
#png(file="../figures/age_dist.png", width=600, height=350)
ggplot(data) + geom_density(aes(x = Age))
install.packages("hrbrtheme")
install.packages("hrbrthemes")
library(varhandle)
library(corrplot)
library(ggplot2)
library(hrbrthemes)
#png(file="../figures/age_dist.png", width=600, height=350)
ggplot(data) + geom_density(aes(x = Age), fill="#69b3a2", color="#e9ecef", alpha=0.8) + theme_ipsum()
#png(file="../figures/age_dist.png", width=600, height=350)
ggplot(data) + geom_density(aes(x = Age), fill="#69b3a2", color="#e9ecef", alpha=0.8) + theme_ipsum()
library(varhandle)
library(corrplot)
library(ggplot2)
library(hrbrthemes)
windowsFonts("Arial" = windowsFont("Arial"))
ggplot(data) + geom_density(aes(x = Age), fill="#69b3a2", color="#e9ecef", alpha=0.8) + theme_ipsum()
#png(file="../figures/age_dist.png", width=600, height=350)
ggplot(data) + geom_density(aes(x = Age), fill="#69b3a2", color="#e9ecef", alpha=0.8) + theme_ipsum() + ggtitle("Age Density Plot") + xlab("Age") + ylab("Density")
windowsFonts()
#png(file="../figures/age_dist.png", width=600, height=350)
ggplot(data) + geom_density(aes(x = Age), fill="#69b3a2", color="#e9ecef", alpha=0.8) + ggtitle("Age Density Plot") + xlab("Age") + ylab("Density")
#png(file="../figures/age_dist.png", width=600, height=350)
ggplot(data) + geom_density(aes(x = Age), fill="#69b3a2", color="#e9ecef", alpha=0.8) + ggtitle("Age Density Plot") + xlab("Age") + ylab("Density") + theme_bw()
#png(file="../figures/age_dist.png", width=600, height=350)
ggplot(data) + geom_density(aes(x = Age), fill="#69b3a2", color="#e9ecef", alpha=0.8) + ggtitle("Age Density Plot") + xlab("Age") + ylab("Density") + theme_classic()
#png(file="../figures/age_dist.png", width=600, height=350)
ggplot(data) + geom_density(aes(x = Age), fill="#69b3a2", color="#e9ecef", alpha=0.8) + ggtitle("Age Density Plot") + xlab("Age") + ylab("Density") + theme_ipsum_ps()
windowsFonts("Arial Narrow" = windowsFont("Arial"))
windowsFonts()
#png(file="../figures/age_dist.png", width=600, height=350)
ggplot(data) + geom_density(aes(x = Age), fill="#69b3a2", color="#e9ecef", alpha=0.8) + ggtitle("Age Density Plot") + xlab("Age") + ylab("Density") + theme_ipsum()
windowsFonts("Arial Narrow" = windowsFont("TT Arial"))
windowsFonts()
#png(file="../figures/age_dist.png", width=600, height=350)
ggplot(data) + geom_density(aes(x = Age), fill="#69b3a2", color="#e9ecef", alpha=0.8) + ggtitle("Age Density Plot") + xlab("Age") + ylab("Density") + theme_ipsum()
#png(file="../figures/age_dist.png", width=600, height=350)
ggplot(data) + geom_density(aes(x = Age), fill="#69b3a2", color="#e9ecef", alpha=0.8) + ggtitle("Age Density Plot") + xlab("Age") + ylab("Density") + theme_modern_rc()
#png(file="../figures/age_dist.png", width=600, height=350)
ggplot(data) + geom_density(aes(x = Age), fill="#69b3a2", color="#e9ecef", alpha=0.8) + ggtitle("Age Density Plot") + xlab("Age") + ylab("Density") + theme_light()
#png(file="../figures/age_dist.png", width=600, height=350)
ggplot(data) + geom_density(aes(x = Age), fill="#69b3a2", color="#e9ecef", alpha=0.8) + ggtitle("Age Density Plot") + xlab("Age") + ylab("Density") + theme_classic()
#png(file="../figures/age_dist.png", width=600, height=350)
ggplot(data) + geom_density(aes(x = Age), fill="#69b3a2", color="#e9ecef", alpha=0.8) + ggtitle("Age Density Plot") + xlab("Age") + ylab("Density") + theme_bw()
library(ggplot2)
png(file="../figures/age_dist.png", width=600, height=350)
ggplot(data) + geom_density(aes(x = Age), fill="#69b3a2", color="#e9ecef", alpha=0.8) + ggtitle("Age Density Plot") + xlab("Age") + ylab("Density") + theme_bw()
dev.off()
ggplot(data) + geom_density(aes(x = Age), fill="#69b3a2", color="#e9ecef", alpha=0.8) + ggtitle("Age Density Plot") + xlab("Age") + ylab("Density") + theme_bw()
# saves plot
png(file="../figures/age_dist.png", width=600, height=350)
ggplot(data) + geom_density(aes(x = Age), fill="#69b3a2", color="#e9ecef", alpha=0.8) + ggtitle("Age Density Plot") + xlab("Age") + ylab("Density") + theme_bw()
dev.off()
png(file="../figures/cor_numeric.png", width=600, height=350)
cor <- cor(data[, c("Age", "Height", "Weight", "BMI", "Systole", "Diastole")])
palette = colorRampPalette(c("skyblue", "blue", "yellow"))(20)
heatmap(cor, col = palette, scale = "column")
dev.off()
heatmap(cor, col = palette, scale = "column")
ggplot(data) + geom_density(aes(x = Height), fill="#69b3a2", color="#e9ecef", alpha=0.8) + ggtitle("Height Density Plot") + xlab("Height") + ylab("Density") + theme_bw()
# saves plot
png(file="../figures/age_dist.png", width=600, height=350)
ggplot(data) + geom_density(aes(x = Height), fill="#69b3a2", color="#e9ecef", alpha=0.8) + ggtitle("Height Density Plot") + xlab("Height") + ylab("Density") + theme_bw()
dev.off()
ggplot(data) + geom_density(aes(x = Age), fill="#69b3a2", color="#e9ecef", alpha=0.8) + ggtitle("Age Density Plot") + xlab("Age") + ylab("Density") + theme_bw()
# saves plot
png(file="../figures/age_dist.png", width=600, height=350)
ggplot(data) + geom_density(aes(x = Age), fill="#69b3a2", color="#e9ecef", alpha=0.8) + ggtitle("Age Density Plot") + xlab("Age") + ylab("Density") + theme_bw()
dev.off()
ggplot(data) + geom_density(aes(x = Height), fill="#69b3a2", color="#e9ecef", alpha=0.8) + ggtitle("Height Density Plot") + xlab("Height") + ylab("Density") + theme_bw()
# saves plot
png(file="../figures/height_dist.png", width=600, height=350)
ggplot(data) + geom_density(aes(x = Height), fill="#69b3a2", color="#e9ecef", alpha=0.8) + ggtitle("Height Density Plot") + xlab("Height") + ylab("Density") + theme_bw()
dev.off()
ggplot(data) + geom_density(aes(x = Weight), fill="#69b3a2", color="#e9ecef", alpha=0.8) + ggtitle("Weight Density Plot") + xlab("Weight") + ylab("Density") + theme_bw()
ggplot(data) + geom_density(aes(x = Weight), fill="#69b3a2", color="#e9ecef", alpha=0.8) + ggtitle("Weight Density Plot") + xlab("Weight") + ylab("Density") + theme_bw()
ggplot(data) + geom_density(aes(x = Weight), fill="#69b3a2", color="#e9ecef", alpha=0.8) + ggtitle("Weight Density Plot") + xlab("Weight") + ylab("Density") + theme_bw()
# saves plot
png(file="../figures/weight_dist.png", width=600, height=350)
ggplot(data) + geom_density(aes(x = Weight), fill="#69b3a2", color="#e9ecef", alpha=0.8) + ggtitle("Weight Density Plot") + xlab("Weight") + ylab("Density") + theme_bw()
dev.off()
ggplot(data) + geom_density(aes(x = BMI), fill="#69b3a2", color="#e9ecef", alpha=0.8) + ggtitle("BMI Density Plot") + xlab("BMI") + ylab("Density") + theme_bw()
# saves plot
png(file="../figures/bmi_dist.png", width=600, height=350)
ggplot(data) + geom_density(aes(x = BMI), fill="#69b3a2", color="#e9ecef", alpha=0.8) + ggtitle("BMI Density Plot") + xlab("BMI") + ylab("Density") + theme_bw()
dev.off()
boxplot(data , horizontal=TRUE , ylim=c(-10,20), xaxt="n" , col=rgb(0.8,0.8,0,0.5) , frame=F)
ggplot(data) + geom_density(aes(x = BMI), fill="#69b3a2", color="#e9ecef", alpha=0.8) + ggtitle("BMI Density Plot") + xlab("BMI") + ylab("Density") + theme_bw()
# saves plot
png(file="../figures/bmi_dist.png", width=600, height=350)
ggplot(data) + geom_density(aes(x = BMI), fill="#69b3a2", color="#e9ecef", alpha=0.8) + ggtitle("BMI Density Plot") + xlab("BMI") + ylab("Density") + theme_bw()
dev.off()
ggplot(data) + geom_bar(aes(x = Target))
ggplot(data) + geom_bar(aes(x = Target)) + theme_bw()
ggplot(data) + geom_bar(aes(x = Target, fill = Target)) + theme_bw()
ggplot(data) + geom_bar(aes(x = Target, fill = Target), alpha=0.8) + theme_bw()
ggplot(data) + geom_bar(aes(x = Target, fill = Target), alpha=0.8) + theme_bw() + ggtitle("Class Distribution") + xlab("Target") + ylab("Count")
ggplot(data) + geom_bar(aes(x = Target, fill = Target), alpha=0.8) + theme_bw() + ggtitle("Class Distribution") + xlab("Target") + ylab("Count")
# saves plot
png(file="../figures/class_dist.png", width=600, height=350)
ggplot(data) + geom_bar(aes(x = Target, fill = Target), alpha=0.8) + theme_bw() + ggtitle("Class Distribution") + xlab("Target") + ylab("Count")
dev.off()
ggplot(data) + geom_bar(aes(x = Smoking, fill = Target), alpha=0.8) + theme_bw() + ggtitle("Smoking Distribution") + xlab("Smoking") + ylab("Count")
# saves plot
png(file="../figures/smoking_dist.png", width=600, height=350)
ggplot(data) + geom_bar(aes(x = Smoking, fill = Target), alpha=0.8) + theme_bw() + ggtitle("Smoking Distribution") + xlab("Smoking") + ylab("Count")
dev.off()
ggplot(data) + geom_density(aes(x = BMI, fill = Target), fill="#69b3a2", color="#e9ecef", alpha=0.8) + ggtitle("BMI Density Plot") + xlab("BMI") + ylab("Density") + theme_bw()
ggplot(data) + geom_density(aes(x = BMI, fill = Target), color="#e9ecef", alpha=0.8) + ggtitle("BMI Density Plot") + xlab("BMI") + ylab("Density") + theme_bw()
png(file="../figures/bmi_dist.png", width=600, height=350)
ggplot(data) + geom_density(aes(x = BMI, fill = Target), color="#e9ecef", alpha=0.8) + ggtitle("BMI Density Plot") + xlab("BMI") + ylab("Density") + theme_bw()
dev.off()
ggplot(data) + geom_density(aes(x = BMI, fill = Target), color="#e9ecef", alpha=0.8) + ggtitle("BMI Density Plot") + xlab("BMI") + ylab("Density") + theme_bw()
# saves plot
png(file="../figures/bmi_dist.png", width=600, height=350)
ggplot(data) + geom_density(aes(x = BMI, fill = Target), color="#e9ecef", alpha=0.8) + ggtitle("BMI Density Plot") + xlab("BMI") + ylab("Density") + theme_bw()
dev.off()
ggplot(data) + geom_density(aes(x = Weight, fill = Target), color="#e9ecef", alpha=0.8) + ggtitle("Weight Density Plot") + xlab("Weight") + ylab("Density") + theme_bw()
# saves plot
png(file="../figures/weight_dist.png", width=600, height=350)
ggplot(data) + geom_density(aes(x = Weight, fill = Target), color="#e9ecef", alpha=0.8) + ggtitle("Weight Density Plot") + xlab("Weight") + ylab("Density") + theme_bw()
dev.off()
ggplot(data) + geom_density(aes(x = Weight, fill = Target), color="#e9ecef", alpha=0.8) + ggtitle("Weight Density Plot") + xlab("Weight") + ylab("Density") + theme_bw() + scale_fill_manual(values=c("#999999", "#E69F00"))
ggplot(data) + geom_density(aes(x = Weight, fill = Target), alpha=0.8) + ggtitle("Weight Density Plot") + xlab("Weight") + ylab("Density") + theme_bw() + scale_fill_manual(values=c("#207516", "#eb4034"))
ggplot(data) + geom_density(aes(x = Weight, fill = Target), alpha=0.8) + ggtitle("Weight Density Plot") + xlab("Weight") + ylab("Density") + theme_bw() + scale_fill_manual(values=c("#15158a", "#eb4034"))
ggplot(data) + geom_density(aes(x = Weight, fill = Target), alpha=0.8) + ggtitle("Weight Density Plot") + xlab("Weight") + ylab("Density") + theme_bw() + scale_fill_manual(values=c("#15158a", "#eb4034"))
# saves plot
png(file="../figures/weight_dist.png", width=600, height=350)
ggplot(data) + geom_density(aes(x = Weight, fill = Target), alpha=0.8) + ggtitle("Weight Density Plot") + xlab("Weight") + ylab("Density") + theme_bw() + scale_fill_manual(values=c("#15158a", "#eb4034"))
dev.off()
ggplot(data) + geom_density(aes(x = Height, fill = Target), alpha=0.8) + ggtitle("Height Density Plot") + xlab("Height") + ylab("Density") + theme_bw() + scale_fill_manual(values=c("#15158a", "#eb4034"))
# saves plot
png(file="../figures/height_dist.png", width=600, height=350)
ggplot(data) + geom_density(aes(x = Height, fill = Target), alpha=0.8) + ggtitle("Height Density Plot") + xlab("Height") + ylab("Density") + theme_bw() + scale_fill_manual(values=c("#15158a", "#eb4034"))
dev.off()
ggplot(data) + geom_density(aes(x = Age, fill = Target), alpha=0.8) + ggtitle("Age Density Plot") + xlab("Age") + ylab("Density") + theme_bw() + scale_fill_manual(values=c("#15158a", "#eb4034"))
# saves plot
png(file="../figures/age_dist.png", width=600, height=350)
ggplot(data) + geom_density(aes(x = Age, fill = Target), alpha=0.8) + ggtitle("Age Density Plot") + xlab("Age") + ylab("Density") + theme_bw() + scale_fill_manual(values=c("#15158a", "#eb4034"))
dev.off()
ggplot(data) + geom_density(aes(x = BMI, fill = Target), alpha=0.8) + ggtitle("BMI Density Plot") + xlab("BMI") + ylab("Density") + theme_bw() + scale_fill_manual(values=c("#15158a", "#eb4034"))
# saves plot
png(file="../figures/bmi_dist.png", width=600, height=350)
ggplot(data) + geom_density(aes(x = BMI, fill = Target), alpha=0.8) + ggtitle("BMI Density Plot") + xlab("BMI") + ylab("Density") + theme_bw() + scale_fill_manual(values=c("#15158a", "#eb4034"))
dev.off()
ggplot(data) + geom_bar(aes(x = Target, fill = Target), alpha=0.8) + theme_bw() + ggtitle("Class Distribution") + xlab("Target") + ylab("Count") + scale_fill_manual(values=c("#15158a", "#eb4034"))
# saves plot
png(file="../figures/class_dist.png", width=600, height=350)
ggplot(data) + geom_bar(aes(x = Target, fill = Target), alpha=0.8) + theme_bw() + ggtitle("Class Distribution") + xlab("Target") + ylab("Count") + scale_fill_manual(values=c("#15158a", "#eb4034"))
dev.off()
ggplot(data) + geom_bar(aes(x = Smoking, fill = Target), alpha=0.8) + theme_bw() + ggtitle("Smoking Distribution") + xlab("Smoking") + ylab("Count") + scale_fill_manual(values=c("#15158a", "#eb4034"))
# saves plot
png(file="../figures/smoking_dist.png", width=600, height=350)
ggplot(data) + geom_bar(aes(x = Smoking, fill = Target), alpha=0.8) + theme_bw() + ggtitle("Smoking Distribution") + xlab("Smoking") + ylab("Count") + scale_fill_manual(values=c("#15158a", "#eb4034"))
dev.off()
ggplot(data) + geom_bar(aes(x = Alcohol, fill = Target), alpha=0.8) + theme_bw() + ggtitle("Smoking Distribution") + xlab("Smoking") + ylab("Count") + scale_fill_manual(values=c("#15158a", "#eb4034"))
# saves plot
png(file="../figures/alcohol_dist.png", width=600, height=350)
ggplot(data) + geom_bar(aes(x = Alcohol, fill = Target), alpha=0.8) + theme_bw() + ggtitle("Alcohol Distribution") + xlab("Alcohol") + ylab("Count") + scale_fill_manual(values=c("#15158a", "#eb4034"))
dev.off()
ggplot(data) + geom_bar(aes(x = Alcohol, fill = Target), alpha=0.8) + theme_bw() + ggtitle("Alcohol Distribution") + xlab("Alcohol") + ylab("Count") + scale_fill_manual(values=c("#15158a", "#eb4034"))
# saves plot
png(file="../figures/alcohol_dist.png", width=600, height=350)
ggplot(data) + geom_bar(aes(x = Alcohol, fill = Target), alpha=0.8) + theme_bw() + ggtitle("Alcohol Distribution") + xlab("Alcohol") + ylab("Count") + scale_fill_manual(values=c("#15158a", "#eb4034"))
dev.off()
ggplot(data) + geom_bar(aes(x = Activity, fill = Target), alpha=0.8) + theme_bw() + ggtitle("Physical Activity Distribution") + xlab("Activity") + ylab("Count") + scale_fill_manual(values=c("#15158a", "#eb4034"))
ggplot(data) + geom_bar(aes(x = Active, fill = Target), alpha=0.8) + theme_bw() + ggtitle("Physical Activity Distribution") + xlab("Activity") + ylab("Count") + scale_fill_manual(values=c("#15158a", "#eb4034"))
ggplot(data) + geom_bar(aes(x = Active, fill = Target), alpha=0.8) + theme_bw() + ggtitle("Physical Activity Distribution") + xlab("Activity") + ylab("Count") + scale_fill_manual(values=c("#15158a", "#eb4034"))
# saves plot
png(file="../figures/activity_dist.png", width=600, height=350)
ggplot(data) + geom_bar(aes(x = Active, fill = Target), alpha=0.8) + theme_bw() + ggtitle("Physical Activity Distribution") + xlab("Activity") + ylab("Count") + scale_fill_manual(values=c("#15158a", "#eb4034"))
dev.off()
ggplot(data) + geom_bar(aes(x = Gender, fill = Target), alpha=0.8) + theme_bw() + ggtitle("Gender Distribution") + xlab("Gender") + ylab("Count") + scale_fill_manual(values=c("#15158a", "#eb4034"))
# saves plot
png(file="../figures/gender_dist.png", width=600, height=350)
ggplot(data) + geom_bar(aes(x = Gender, fill = Target), alpha=0.8) + theme_bw() + ggtitle("Gender Distribution") + xlab("Gender") + ylab("Count") + scale_fill_manual(values=c("#15158a", "#eb4034"))
dev.off()
ggplot(data, aes(x= Age , y = Height, color = Target)) +  geom_point(size=6)
ggplot(data, aes(x= Age , y = Height, color = Target)) +  geom_point(alpha = 0.9)
ggplot(data, aes(x= Age , y = Height, color = Target)) +  geom_point(alpha = 0.9) + stat_smooth()
ggplot(data, aes(x= Height , y = Weight, color = Target)) +  geom_point(alpha = 0.9) + stat_smooth()
ggplot(data, aes(x= Age , y = Height, color = Target)) +  geom_point(alpha = 0.9) + scale_fill_manual(values=c("#15158a", "#eb4034")) +  stat_smooth()
ggplot(data, aes(x= Age , y = Height, color = Target)) +  geom_point(alpha = 0.9) + stat_smooth()
ggplot(data, aes(x= Height , y = Weight, color = Target)) +  geom_point(alpha = 0.9) + scale_color_manual(values=c("#15158a", "#eb4034")) + stat_smooth()
ggplot(data, aes(x= Height , y = Weight, color = Target)) +  geom_point(alpha = 0.8) + scale_color_manual(values=c("#15158a", "#eb4034")) + stat_smooth()
ggplot(data, aes(x= Age , y = Height, color = Target)) +  geom_point(alpha = 0.9) + scale_color_manual(values=c("#15158a", "#eb4034")) + stat_smooth()
ggplot(data, aes(x= Age , y = Height, color = Target)) +  geom_point(alpha = 0.9) + scale_color_manual(values=c("#15158a", "#eb4034")) + stat_smooth()
# saves plot
png(file="../figures/age_vs_height.png", width=600, height=350))
ggplot(data, aes(x= Age , y = Height, color = Target)) +  geom_point(alpha = 0.9) + scale_color_manual(values=c("#15158a", "#eb4034")) + stat_smooth()
# saves plot
png(file="../figures/age_vs_height.png", width=600, height=350)
ggplot(data, aes(x= Age , y = Height, color = Target)) +  geom_point(alpha = 0.9) + scale_color_manual(values=c("#15158a", "#eb4034")) + stat_smooth()
dev.off()
ggplot(data, aes(x= Height , y = Weight, color = Target)) +  geom_point(alpha = 0.8) + scale_color_manual(values=c("#15158a", "#eb4034")) + stat_smooth()
# saves plot
png(file="../figures/height_vs_weight.png", width=600, height=350)
ggplot(data, aes(x= Height , y = Weight, color = Target)) +  geom_point(alpha = 0.8) + scale_color_manual(values=c("#15158a", "#eb4034")) + stat_smooth()
dev.off()
ggplot(data, aes(x= Age , y = Height, color = Target)) +  geom_point(alpha = 0.9) + scale_color_manual(values=c("#15158a", "#eb4034")) + stat_smooth() + ggtitle("Age Vs. Height")
# saves plot
png(file="../figures/age_vs_height.png", width=600, height=350)
ggplot(data, aes(x= Age , y = Height, color = Target)) +  geom_point(alpha = 0.9) + scale_color_manual(values=c("#15158a", "#eb4034")) + stat_smooth() + ggtitle("Age Vs. Height")
dev.off()
ggplot(data, aes(x= Height , y = Weight, color = Target)) +  geom_point(alpha = 0.8) + scale_color_manual(values=c("#15158a", "#eb4034")) + stat_smooth() + ggtitle("Height Vs. Weight")
# saves plot
png(file="../figures/height_vs_weight.png", width=600, height=350)
ggplot(data, aes(x= Height , y = Weight, color = Target)) +  geom_point(alpha = 0.8) + scale_color_manual(values=c("#15158a", "#eb4034")) + stat_smooth() + ggtitle("Height Vs. Weight")
dev.off()
ggplot(data, aes(x= BMI , y = Systole, color = Target)) +  geom_point(alpha = 0.8) + scale_color_manual(values=c("#15158a", "#eb4034")) + stat_smooth() + ggtitle("BMI Vs. Systolic Pressure")
# saves plot
png(file="../figures/bmi_vs_systole.png", width=600, height=350)
ggplot(data, aes(x= BMI , y = Systole, color = Target)) +  geom_point(alpha = 0.8) + scale_color_manual(values=c("#15158a", "#eb4034")) + stat_smooth() + ggtitle("BMI Vs. Systolic Pressure")
dev.off()
ggplot(data, aes(x= BMI , y = Diastole, color = Target)) +  geom_point(alpha = 0.8) + scale_color_manual(values=c("#15158a", "#eb4034")) + stat_smooth() + ggtitle("BMI Vs. Diastolic Pressure")
# saves plot
png(file="../figures/bmi_vs_diastole.png", width=600, height=350)
ggplot(data, aes(x= BMI , y = Diastole, color = Target)) +  geom_point(alpha = 0.8) + scale_color_manual(values=c("#15158a", "#eb4034")) + stat_smooth() + ggtitle("BMI Vs. Diastolic Pressure")
dev.off()
ggplot(data) + geom_bar(aes(x = Gender, fill = Target), position = 'dodge' alpha=0.8) + theme_bw() + ggtitle("Gender Distribution") + xlab("Gender") + ylab("Count") + scale_fill_manual(values=c("#15158a", "#eb4034"))
ggplot(data) + geom_bar(aes(x = Gender, fill = Target), position = 'dodge', alpha=0.8) + theme_bw() + ggtitle("Gender Distribution") + xlab("Gender") + ylab("Count") + scale_fill_manual(values=c("#15158a", "#eb4034"))
ggplot(data) + geom_bar(aes(x = Gender, fill = Target), position = 'dodge', alpha=0.8) + theme_bw() + ggtitle("Gender Distribution") + xlab("Gender") + ylab("Count") + scale_fill_manual(values=c("#15158a", "#eb4034"))
# saves plot
png(file="../figures/gender_dist.png", width=600, height=350)
ggplot(data) + geom_bar(aes(x = Gender, fill = Target), position = 'dodge', alpha=0.8) + theme_bw() + ggtitle("Gender Distribution") + xlab("Gender") + ylab("Count") + scale_fill_manual(values=c("#15158a", "#eb4034"))
dev.off()
ggplot(data) + geom_bar(aes(x = Active, fill = Target), position = 'dodge', alpha=0.8) + theme_bw() + ggtitle("Physical Activity Distribution") + xlab("Activity") + ylab("Count") + scale_fill_manual(values=c("#15158a", "#eb4034"))
# saves plot
png(file="../figures/activity_dist.png", width=600, height=350)
ggplot(data) + geom_bar(aes(x = Active, fill = Target), position = 'dodge', alpha=0.8) + theme_bw() + ggtitle("Physical Activity Distribution") + xlab("Activity") + ylab("Count") + scale_fill_manual(values=c("#15158a", "#eb4034"))
dev.off()
ggplot(data) + geom_bar(aes(x = Alcohol, fill = Target), position = 'dodge', alpha=0.8) + theme_bw() + ggtitle("Alcohol Distribution") + xlab("Alcohol") + ylab("Count") + scale_fill_manual(values=c("#15158a", "#eb4034"))
# saves plot
png(file="../figures/alcohol_dist.png", width=600, height=350)
ggplot(data) + geom_bar(aes(x = Alcohol, fill = Target), position = 'dodge', alpha=0.8) + theme_bw() + ggtitle("Alcohol Distribution") + xlab("Alcohol") + ylab("Count") + scale_fill_manual(values=c("#15158a", "#eb4034"))
dev.off()
ggplot(data) + geom_bar(aes(x = Smoking, fill = Target), position = 'dodge', alpha=0.8) + theme_bw() + ggtitle("Smoking Distribution") + xlab("Smoking") + ylab("Count") + scale_fill_manual(values=c("#15158a", "#eb4034"))
# saves plot
png(file="../figures/smoking_dist.png", width=600, height=350)
ggplot(data) + geom_bar(aes(x = Smoking, fill = Target), position = 'dodge', alpha=0.8) + theme_bw() + ggtitle("Smoking Distribution") + xlab("Smoking") + ylab("Count") + scale_fill_manual(values=c("#15158a", "#eb4034"))
dev.off()
